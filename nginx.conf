upstream steamboost {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).
  server unix:/home/MT/run/gunicorn.sock fail_timeout=0;
}

server {
    listen 443 ssl;
    server_name steamboost.ge;

    ssl_certificate /etc/letsencrypt/live/steamboost.ge/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/steamboost.ge/privkey.pem;

    client_max_body_size 4G;
    access_log /home/MT/access.log;
    error_log /home/MT/err.log;

    # proxy for gunicorn
    location / {

        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  It's also safe to set if you're
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.
        # proxy_buffering off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://steamboost;
            break;
        }
    }

    location /favicon.ico {
	    alias /home/MT/src/base/static/img/favicon.ico;
    }

    location /static/ {
        alias   /home/MT/src/base/static/;
    }

    location /media/ {
        alias   /home/MT/src/base/media/;
    }

    # Error pages
    error_page 502 /502.html;
    location /502.html {
        alias /home/MT/src/main/templates/maintenance.html;
    }

    # for https://chrome.google.com/webstore/detail/adjaranet-adblocker/oalhgihgmiieopckdajoefdekmiknhgg
    location /ads.json {
	alias /home/ads.json;
    }
}


server {
	listen 80;
	server_name redirect_to_https;
	return 301 https://$host$request_uri;
}
